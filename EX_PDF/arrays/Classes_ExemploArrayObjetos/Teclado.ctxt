#BlueJ class context
comment0.target=Teclado
comment0.text=\ Classe\ que\ permite\ fazer\ leitura\ de\ dados\ do\ teclado,\ com\ m\uFFFDtodos\ est\uFFFDticos.\n\ \ Iso\ significa\ que\ n\uFFFDo\ h\uFFFD\ necessidade\ de\ instanciar\ um\ objeto\ para\ invocar\ os\ m\uFFFDtodos.\n\ \ Sintaxe\ p/\ chamada\:\ <nome_da_classe>.<nome_do_m\uFFFDtodo>(<mensagem\ de\ solicita\uFFFD\uFFFDo>)\n\ \ Exemplo\ de\ chamada\:\ Teclado.leInt("Digite\ um\ n\uFFFDmero\ inteiro")\n
comment1.params=msg
comment1.target=int\ leInt(java.lang.String)
comment1.text=\n\ \ \ \ \ \ \ \ L\uFFFD\ um\ inteiro,\ exibindo\ na\ tela\ uma\ mensagem\ de\ solicita\uFFFD\uFFFDo.\n\ \ \ \ \ \ \ \ @return\ int\n
comment2.params=msg
comment2.target=double\ leDouble(java.lang.String)
comment2.text=\n\ \ \ \ \ \ \ \ L\uFFFD\ um\ double,\ exibindo\ na\ tela\ uma\ mensagem\ de\ solicita\uFFFD\uFFFDo.\n\ \ \ \ \ \ \ \ @return\ double\n
comment3.params=msg
comment3.target=java.lang.String\ leString(java.lang.String)
comment3.text=\n\ \ \ \ \ \ \ \ L\uFFFD\ um\ string,\ exibindo\ na\ tela\ uma\ mensagem\ de\ solicita\uFFFD\uFFFDo.\n\ \ \ \ \ \ \ \ @return\ String\n
comment4.params=msg
comment4.target=java.lang.Character\ leChar(java.lang.String)
comment4.text=\n\ \ \ \ \ \ \ \ L\uFFFD\ um\ caractere\ exibindo\ na\ tela\ uma\ mensagem\ de\ solicita\uFFFD\uFFFDo.\n\ \ \ \ \ \ \ \ @return\ Char\n
comment5.params=msg
comment5.target=boolean\ leBoolean(java.lang.String)
comment5.text=\n\ \ \ \ \ \ \ \ L\uFFFD\ um\ booleano\ exibindo\ na\ tela\ uma\ mensagem\ de\ solicita\uFFFD\uFFFDo.\n\ \ \ \ \ \ \ \ @return\ boolean\n
numComments=6
